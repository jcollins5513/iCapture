(Fig) signalled err=-12710 at <>:601
(Fig) signalled err=-12710 at <>:601
(Fig) signalled err=-12710 at <>:601
LiDARDetector: Scene depth is available on this device
LiDARDetector: Smoothed scene depth available: true
LiDARDetector: Setting up ARSession...
LiDARDetector: ARSession created with delegate
LiDARDetector: ARSession delegate set: true
LiDARDetector: ARSession created but not started yet
CameraManager: Setting up capture session...
CameraManager: Session preset set to photo
TriggerEngine: Vehicle lost - disabling capture triggers
CameraManager: Initializing LiDAR detection...
CameraManager: - LiDAR available: true
CameraManager: LiDAR detection available (will start on demand)
CameraManager: - useLiDARDetection set to: true
CameraManager: Updated activeFormat for high-resolution capture
CameraManager: Preferred photo dimensions set to 8064x6048 (~48.8MP)
CameraManager: Video input added successfully
CameraManager: Video output added successfully
CameraManager: Depth data delivery not supported
CameraManager: Photo output added successfully
CameraPreviewView: Creating CameraPreviewContainerView with frame: (0.0, 0.0, 430.0, 932.0)
CameraPreviewView: Preview layer not ready yet - will be added in updateUIView
CameraPreviewView: Updated UIView frame to: (0.0, 0.0, 430.0, 932.0)
CameraPreviewView: Preview layer still not available in updateUIView
CameraView: View appeared, starting camera session...
CameraView: Preview appeared; layer ready: false
CameraManager: Movie file output added successfully
CameraManager: Session configuration committed
CameraManager: Starting capture session
CameraManager: Camera device: Back Camera
CameraManager: Camera position: 1
CameraManager: Camera format: <AVCaptureDeviceFormat: 0x107657690 'vide'/'420v' 4032x3024, { 1- 30 fps}, photo dims:{4032x3024,8064x6048}, fov:72.044, max zoom:189.00 (upscales @1.00), secondary:2.00, system zoom range:1.0-10.0, AF System:2, ISO:55.0-12320.0, SS:0.000015-1.000000, system exposure bias range:-2.0-2.0, supports HDR, supports responsive capture, supports zero shutter lag, supports highest photo quality, supports Smudge Detection>
CameraManager: 48MP high-resolution capture supported
CameraManager: Photo output configured for high-resolution capture
<<<< FigSharedMemPool >>>> Fig assert: "blkHdr->useCount > 0" at  (FigSharedMemPool.c:591) - (err=0)
CameraManager: Preview layer created and configured
CameraManager: Preview layer session: true
CameraManager: Preview layer videoGravity: AVLayerVideoGravity(_rawValue: AVLayerVideoGravityResizeAspectFill)
CameraManager: Preview layer connection: true
CameraPreviewView: Adding preview layer to view
CameraPreviewView: View bounds: (0.0, 0.0, 430.0, 932.0)
CameraPreviewView: Screen bounds: (0.0, 0.0, 430.0, 932.0)
CameraPreviewView: Preview layer videoGravity: AVLayerVideoGravityResizeAspectFill
CameraPreviewContainerView: Updated preview layer frame to bounds: (0.0, 0.0, 430.0, 932.0)
CameraPreviewView: Preview layer superlayer: true
CameraPreviewView: Preview layer isHidden: false
CameraPreviewView: Preview layer opacity: 1.0
CameraManager: Session running: true
CameraManager: Preview layer exists, session: true
CameraManager: Preview layer frame: (0.0, 0.0, 430.0, 932.0)
CameraView: Checking camera session status...
CameraView: Is authorized: true
CameraView: Is session running: true
CameraView: Preview layer exists: true
CameraView: Preview layer session exists: true
CameraView: Preview layer frame: (0.0, 0.0, 430.0, 932.0)
CameraManager: Preview layer frame update requested - delegating to CameraPreviewView
CameraManager: Using traditional frame processing
CameraManager: - LiDAR session running: false
CameraManager: - Depth data available: false
CameraManager: Applying video rotation angle: 90.0
CameraManager: Video rotation angle set successfully
CameraManager: Camera health check - Available: true
CameraManager: Preview layer frame update requested - delegating to CameraPreviewView
PerformanceMonitor: Thermal throttling started - State: Nominal
Requesting visual style in an implementation that has disabled it, returning nil. Behavior of caller is undefined.
Requesting visual style in an implementation that has disabled it, returning nil. Behavior of caller is undefined.
Requesting visual style in an implementation that has disabled it, returning nil. Behavior of caller is undefined.
Requesting visual style in an implementation that has disabled it, returning nil. Behavior of caller is undefined.
Requesting visual style in an implementation that has disabled it, returning nil. Behavior of caller is undefined.
UIKeyboardLayoutStar implements focusItemsInRect: - caching for linear focus movement is limited as long as this view is on screen.
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
Reporter disconnected. { function=sendMessage, reporterID=2671469658113 }
SessionManager: Cleaned up old session: WWW
SessionManager: Started session for stock RRRRR
CameraManager: Beginning automatic capture workflow
CameraManager: Temporarily stopping camera session for LiDAR...
CameraManager: Automatic capture workflow already in progress
Reporter disconnected or already stopped. { func=stop, reporterID=2671469658113 }
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
CameraManager: Camera session stopped for LiDAR
LiDARDetector: Using smoothed scene depth for better quality
LiDARDetector: Starting ARSession with depth sensing...
LiDARDetector: Configuration frame semantics: ARFrameSemantics(rawValue: 24)
LiDARDetector: Scene depth supported: true
LiDARDetector: ARSession started successfully
LiDARDetector: Started depth data timeout timer (10.0s)
CameraManager: LiDAR detection started manually
{"msg":"#Warning Error reading file", "file":"\/\/private\/var\/Managed Preferences\/mobile\/com.apple.CoreMotion.plist", "error":"Error Domain=NSCocoaErrorDomain Code=257 \"The file “com.apple.CoreMotion.plist” couldn’t be opened because you don’t have permission to view it.\" UserInfo={NSFilePath=\/\/private\/var\/Managed Preferences\/mobile\/com.apple.CoreMotion.plist, NSURL=file:\/\/\/\/private\/var\/Managed%20Preferences\/mobile\/com.apple.CoreMotion.plist, NSUnderlyingError=0x1222c2fd0 {Error Domain=NSPOSIXErrorDomain Code=1 \"Operation not permitted\"}}"}
LiDARDetector: ARSession status check:
LiDARDetector: - Session exists: true
LiDARDetector: - Session running: true
LiDARDetector: - Depth data available: false
LiDARDetector: - Background learned: false
LiDARDetector: - Vehicle detected: false
LiDARDetector: - No depth data received yet
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:276) - (err=-12784)
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:513) - (err=-12784)
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:276) - (err=-12784)
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:513) - (err=-12784)
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:276) - (err=-12784)
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:513) - (err=-12784)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
(Fig) signalled err=-12710 at <>:601
(Fig) signalled err=-12710 at <>:601
LiDARDetector: ARSession didUpdate frame - Timestamp: 297.753659
LiDARDetector: Frame has scene depth: false
LiDARDetector: Frame has scene depth confidence: false
LiDARDetector: Frame camera tracking state: notAvailable
LiDARDetector: Camera tracking state is not normal: notAvailable
LiDARDetector: No scene depth data in frame
LiDARDetector: This could be due to:
LiDARDetector: - Device doesn't support scene depth
LiDARDetector: - Poor lighting conditions
LiDARDetector: - ARSession not properly configured
LiDARDetector: - Tracking issues
LiDARDetector: ARSession didUpdate frame - Timestamp: 297.786993958
LiDARDetector: Frame has scene depth: false
LiDARDetector: Frame has scene depth confidence: false
LiDARDetector: Frame camera tracking state: notAvailable
LiDARDetector: Camera tracking state is not normal: notAvailable
LiDARDetector: No scene depth data in frame
LiDARDetector: This could be due to:
LiDARDetector: - Device doesn't support scene depth
LiDARDetector: - Poor lighting conditions
LiDARDetector: - ARSession not properly configured
LiDARDetector: - Tracking issues
LiDARDetector: Camera tracking state changed: limited((extension in ARKit):__C.ARCamera.TrackingState.Reason.initializing)
LiDARDetector: Camera tracking state: limited((extension in ARKit):__C.ARCamera.TrackingState.Reason.initializing)
LiDARDetector: ARSession didUpdate frame - Timestamp: 297.820328916
LiDARDetector: Frame has scene depth: false
LiDARDetector: Frame has scene depth confidence: false
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: No scene depth data in frame
LiDARDetector: This could be due to:
LiDARDetector: - Device doesn't support scene depth
LiDARDetector: - Poor lighting conditions
LiDARDetector: - ARSession not properly configured
LiDARDetector: - Tracking issues
LiDARDetector: ARSession didUpdate frame - Timestamp: 297.85366375
LiDARDetector: Frame has scene depth: false
LiDARDetector: Frame has scene depth confidence: false
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: No scene depth data in frame
LiDARDetector: This could be due to:
LiDARDetector: - Device doesn't support scene depth
LiDARDetector: - Poor lighting conditions
LiDARDetector: - ARSession not properly configured
LiDARDetector: - Tracking issues
LiDARDetector: ARSession didUpdate frame - Timestamp: 297.886998833
LiDARDetector: Frame has scene depth: false
LiDARDetector: Frame has scene depth confidence: false
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: No scene depth data in frame
LiDARDetector: This could be due to:
LiDARDetector: - Device doesn't support scene depth
LiDARDetector: - Poor lighting conditions
LiDARDetector: - ARSession not properly configured
LiDARDetector: - Tracking issues
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.220348083
LiDARDetector: Frame has scene depth: false
LiDARDetector: Frame has scene depth confidence: false
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: No scene depth data in frame
LiDARDetector: This could be due to:
LiDARDetector: - Device doesn't support scene depth
LiDARDetector: - Poor lighting conditions
LiDARDetector: - ARSession not properly configured
LiDARDetector: - Tracking issues
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.253682916
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.287017875
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.320352791
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.353687791
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.387022625
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.420357541
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.453692583
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.487027541
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.520362375
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.553697291
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.587032208
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: ARSession didUpdate frame - Timestamp: 298.620367208
LiDARDetector: Frame has scene depth: true
LiDARDetector: Frame has scene depth confidence: true
LiDARDetector: Frame camera tracking state: limited(initializing)
LiDARDetector: Camera tracking state is not normal: limited(initializing)
LiDARDetector: Received depth data - Size: 256x192
LiDARDetector: Depth data received - timeout reset
LiDARDetector: Initial environment scan completed after 12 depth frames
LiDARDetector: Background learned using LiDAR depth data
LiDARDetector: Depth map size: 256x192
CameraManager: LiDAR environment scan completed - resuming camera capture workflow
LiDARDetector: Stopped LiDAR detection
CameraManager: LiDAR detection stopped
CameraManager: LiDAR depth data cached for background removal
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
CameraManager: Using traditional frame processing
CameraManager: - LiDAR session running: false
CameraManager: - Depth data available: true
CameraManager: Camera session restarted
ROIDetector: Starting background sampling...
CameraManager: Automatic background sampling started (attempt 1)
ROIDetector: Background sampling progress 1% (frames: 1) elapsed=0.01
ROIDetector: Background sampling progress 28% (frames: 9) elapsed=0.28
CameraManager: Monitoring background sampling attempt 1 - elapsed: 0.52s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 1 - elapsed: 1.03s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 1 - elapsed: 1.55s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 1 - elapsed: 2.07s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 1 - elapsed: 2.59s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 1 - elapsed: 3.11s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 1 - elapsed: 3.63s, progress: 41%, learned: false
CameraManager: Background sampling collected 13 frame(s) with limited LiDAR tracking; disabling LiDAR and retrying with Vision-only sampling
CameraManager: LiDAR detection disabled - switching to traditional detection
ROIDetector: Starting background sampling...
CameraManager: Automatic background sampling started (attempt 2)
CameraManager: Using traditional frame processing
ROIDetector: Background sampling progress 3% (frames: 1) elapsed=0.04
ROIDetector: Background sampling progress 30% (frames: 9) elapsed=0.31
CameraManager: Monitoring background sampling attempt 2 - elapsed: 0.52s, progress: 44%, learned: false
CameraManager: Monitoring background sampling attempt 2 - elapsed: 1.03s, progress: 44%, learned: false
CameraManager: Monitoring background sampling attempt 2 - elapsed: 1.55s, progress: 44%, learned: false
CameraManager: Monitoring background sampling attempt 2 - elapsed: 2.07s, progress: 44%, learned: false
CameraManager: Monitoring background sampling attempt 2 - elapsed: 2.58s, progress: 44%, learned: false
CameraManager: Monitoring background sampling attempt 2 - elapsed: 3.10s, progress: 44%, learned: false
CameraManager: Monitoring background sampling attempt 2 - elapsed: 3.62s, progress: 44%, learned: false
CameraManager: Background sampling attempt 2 timed out; retrying
ROIDetector: Starting background sampling...
CameraManager: Automatic background sampling started (attempt 3)
ROIDetector: Background sampling progress 1% (frames: 1) elapsed=0.02
ROIDetector: Background sampling progress 28% (frames: 9) elapsed=0.28
CameraManager: Monitoring background sampling attempt 3 - elapsed: 0.52s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 3 - elapsed: 1.05s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 3 - elapsed: 1.57s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 3 - elapsed: 2.08s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 3 - elapsed: 2.60s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 3 - elapsed: 3.12s, progress: 41%, learned: false
CameraManager: Monitoring background sampling attempt 3 - elapsed: 3.64s, progress: 41%, learned: false
CameraManager: Background sampling timed out after 3 attempts; finalizing
TriggerEngine: Session started (interval + stop detection)
CameraManager: Automatic capture workflow completed (background sampling timeout) - triggers started
CameraView: Manual capture triggered
CameraManager: supportedMaxPhotoDimensions = [1920x1440, 2016x1512]
CameraManager: Requested photo dimensions: 8064x6048 (~48.8MP)
*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '*** -[AVCapturePhotoOutput capturePhotoWithSettings:delegate:] If you specify a maxPhotoDimensions, it must match one of the supportedMaxPhotoDimensions of the video devices's active format'
*** First throw call stack:
(0x18bf528c8 0x188ec97c4 0x1b1a52e7c 0x10671a710 0x1066e938c 0x10561863c 0x1056322d0 0x105620b4c 0x1056217d4 0x10562db20 0x10562d1c4 0x1e6cdb3b8 0x1e6cda8c0)
libc++abi: terminating due to uncaught exception of type NSException
*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '*** -[AVCapturePhotoOutput capturePhotoWithSettings:delegate:] If you specify a maxPhotoDimensions, it must match one of the supportedMaxPhotoDimensions of the video devices's active format'
*** First throw call stack:
(0x18bf528c8 0x188ec97c4 0x1b1a52e7c 0x10671a710 0x1066e938c 0x10561863c 0x1056322d0 0x105620b4c 0x1056217d4 0x10562db20 0x10562d1c4 0x1e6cdb3b8 0x1e6cda8c0)
terminating due to uncaught exception of type NSException